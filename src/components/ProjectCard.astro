---
interface Props {
    title: string;
    videoSrc: string;
    link: string;
    description: string;
    tags?: string[];
    embed?: boolean;
}

const {
    title,
    videoSrc,
    link,
    description,
    tags = [],
    embed = false,
} = Astro.props;
---

<div
    class="flex flex-col lg:flex-row sm:flex-row
    items-center lg:items-start sm:items-start
    bg-white border-l-4 border-primary-hovered"
>
    <!-- Left: Video thumbnail or embed -->
    {
        embed ? (
            // pb-[56.25%] forces 16:9, percentage-based padding is relative to the containerâ€™s width
            // so pb-[56.25%] sets the height as 56.25% of the width. h-0 ensures the height comes entirely from the padding
            // We only do this for phone screens
            <div class="relative w-full pb-[56.25%] h-0 
                lg:pb-0 sm:pb-0 lg:w-48 lg:h-32 sm:w-48 sm:h-32 
                flex flex-col flex-shrink-0 justify-center overflow-hidden">

                {/* Background color layer to fill the gaps */}
                <div class="absolute inset-0 bg-primary z-0"></div>

                <iframe
                    src={videoSrc}
                    allow="autoplay; fullscreen; picture-in-picture"
                    class="absolute top-0 left-0 w-full h-full z-10"
                />
            </div>
        ) : (
            <video
                src={videoSrc}
                controls
                class="w-full lg:w-48 lg:h-32 sm:w-48 sm:h-32 object-cover flex-shrink-0"
                muted
                loop
                playsinline
            />
        )
    }

    <!-- Right: Text content -->
    <div class="w-full px-4 flex flex-col">
        <a href={link} target="_blank" class="w-full flex flex-col">
            <!-- Title row -->
            <div class="mb-1 pt-1 lg:pt-0 sm:pt-0 flex justify-between items-center hover:underline">
                <h3 class="text-primary-active text-sm">{title}</h3>
                <p class="text-primary-hovered text-sm">Source</p>
            </div>
            <div class="border-b-1 border-primary-mute"></div>
            <!-- Description -->
            <p class="mt-1 text-sm italic text-primary-hovered">
                {description}
            </p>
        </a>

        <!-- Tags -->
        {
            tags.length > 0 && (
                <div class="mt-1 flex flex-wrap gap-1">
                    {tags.map((tag) => (
                        <span class="bg-primary-mute px-1 py-0.5 text-primary-hovered text-xs italic rounded-xs">
                            {tag}
                        </span>
                    ))}
                </div>
            )
        }
    </div>
</div>
